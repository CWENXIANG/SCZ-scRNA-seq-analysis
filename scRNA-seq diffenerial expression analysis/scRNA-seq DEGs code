###DEGs
rm(list = ls())  
setwd("F:/cibersortx/new/group_false_cpm")
options(stringsAsFactors = F)
geps1 <- read.table("CIBERSORTx_Job16_output/CIBERSORTxGEP_Job16_GEPs_Filtered.txt", head = T, row.names = 1)
geps2 <- read.table('CIBERSORTx_Job17_output/CIBERSORTxGEP_Job17_GEPs_Filtered.txt', head = T, row.names = 1)
stderr1 <- read.table("CIBERSORTx_Job16_output/CIBERSORTxGEP_Job16_GEPs_StdErrs.txt", head = T, row.names = 1)
stderr2 <- read.table("CIBERSORTx_Job17_output/CIBERSORTxGEP_Job17_GEPs_StdErrs.txt", head = T, row.names = 1)

geps <- geps1
stderr <- stderr1

for (i in 1:ncol(geps1)){
  vBetaZ <- sapply(1:nrow(geps1), function(j) (geps1[j,i]-geps2[j,i])/sqrt(stderr1[j,i]^2+stderr2[j,i]^2))
  ZPs <- 2*pnorm(-abs(vBetaZ))
  Zqvals <- p.adjust(ZPs, method="BH")
  
  geps <- data.frame(geps[1:35542,],vBetaZ)
  stderr <- data.frame(stderr[1:35542,],Zqvals)
}

geps_final <- geps[1:35542,c(20:ncol(geps))]
names(geps_final) <- names(geps1)

stderr_final <- stderr[1:35542,c(20:ncol(stderr))]
names(stderr_final) <- names(stderr1)


write.csv(geps_final,"19types_geps_false_cpm.csv")
write.csv(stderr_final,"19types_stder_false_cpm.csv")


###Volcano plot
rm(list = ls())
setwd("F:/CIBERSORTX")
BiocManager::install("tidyverse")
BiocManager::install("ggrepel")

library(ggplot2)
library(tidyverse)
library(ggrepel)

df <- read.csv("pvalb2_logfc1.6_neuron degs.txt",header = T,sep = "\t")
head(df)

df$log2FC[df$FC< 0] = -log2(abs(df$FC[df$FC <0])) 
df$log2FC[df$FC> 0] = log2(df$FC[df$FC> 0])

df$FC <- df$log2FC
df <- df[, -5]

#Label of significance
df$label <- ifelse(df$p_val_adj<0.01,"adjust P-val<0.01","adjust P-val>=0.01")
head(df)

#top 5 genes of each cluster
top5sig0 <- filter(df,cluster=="1") %>% distinct(geneID,.keep_all = T) %>% top_n(5,abs(FC))
top5sig1 <- filter(df,cluster=="2") %>% distinct(geneID,.keep_all = T) %>% top_n(3,abs(FC))
top5sig2 <- filter(df,cluster=="3") %>% distinct(geneID,.keep_all = T) %>% top_n(3,abs(FC))
top5sig3 <- filter(df,cluster=="4") %>% distinct(geneID,.keep_all = T) %>% top_n(3,abs(FC))
top5sig4 <- filter(df,cluster=="5") %>% distinct(geneID,.keep_all = T) %>% top_n(3,abs(FC))
top5sig5 <- filter(df,cluster=="6") %>% distinct(geneID,.keep_all = T) %>% top_n(3,abs(FC))
top5sig6 <- filter(df,cluster=="7") %>% distinct(geneID,.keep_all = T) %>% top_n(3,abs(FC))
top5sig7 <- filter(df,cluster=="8") %>% distinct(geneID,.keep_all = T) %>% top_n(3,abs(FC))
top5sig8 <- filter(df,cluster=="9") %>% distinct(geneID,.keep_all = T) %>% top_n(3,abs(FC))
top5sig9 <- filter(df,cluster=="10") %>% distinct(geneID,.keep_all = T) %>% top_n(3,abs(FC))
top5sig10 <- filter(df,cluster=="11") %>% distinct(geneID,.keep_all = T) %>% top_n(3,abs(FC))

top10sig <- rbind(top5sig1,top5sig2,top5sig3,top5sig4,top5sig5,top5sig6,top5sig7,top5sig8,top5sig9,top5sig10)

df$size <- case_when(!(df$geneID %in% top10sig$geneID)~ 1,
                     df$geneID %in% top10sig$geneID ~ 2)

dt <- filter(df,size==1)
head(dt)

p <- ggplot()+
  geom_jitter(data = dt,
              aes(x = cluster, y = FC, color = label),
              size = 0.85,
              width =0.4)
  
p


p <- ggplot()+
  geom_jitter(data = dt,
              aes(x = cluster, y = FC, color = label),
              size = 0.85,
              width =0.4)+
  geom_jitter(data = top10sig,
              aes(x = cluster, y = FC, color = label),
              size = 1,
              width =0.4)
p

dfbar<-data.frame(x=c(0,1,2,3,4,5,6,7,8),
                  y=c(0.3,0.5,0.8,0.5,2.6,2.9,1.15,1.5,2))
dfbar1<-data.frame(x=c(0,1,2,3,4,5,6,7,8),
                   y=c(-1.05,-1.1,-1.3,-1.3,-1.8,-1.55,-1.3,-1.9,-0.85))

p1 <- ggplot()+
  geom_col(data = dfbar,
           mapping = aes(x = x,y = y),
           fill = "#dcdcdc",alpha = 0.6)+
  geom_col(data = dfbar1,
           mapping = aes(x = x,y = y),
           fill = "#dcdcdc",alpha = 0.6)
p1

p2 <- ggplot()+
  geom_col(data = dfbar,
           mapping = aes(x = x,y = y),
           fill = "#dcdcdc",alpha = 0.6)+
  geom_col(data = dfbar1,
           mapping = aes(x = x,y = y),
           fill = "#dcdcdc",alpha = 0.6)+
  geom_jitter(data = dt,
              aes(x = cluster, y = FC, color = label),
              size = 0.85,
              width =0.4)+
  geom_jitter(data = top10sig,
              aes(x = cluster, y = FC, color = label),
              size = 1,
              width =0.4)
p2

p2 <- p
dfcol<-data.frame(x=c(1:11),
                  y=0,
                  label=c(1:11))
mycol <- c("#E64B357F","#4DBBD57F","#00A0877F","#3C54887F","#F39B7F7F","#8491B47F","#91D1C27F","#DC00007F","#7E61487F","#FF0099","#CCFF00")
p3 <- p2 + geom_tile(data = dfcol,
                     aes(x=x,y=y),
                     height=1.0,
                     color = "black",
                     fill = mycol,
                     alpha = 0.6,
                     show.legend = F)+
  
p3

p4 <- p3+
  geom_text_repel(
    data=top10sig,
    aes(x=cluster,y=FC,label=geneID),
    size = 2,
    force = 1.2,
    arrow = arrow(length = unit(0.008, "npc"),
                  type = "open", ends = "last")
  )
p4

p5 <- p4 +
  scale_color_manual(name=NULL,
                     values = c("red","black"))
p5

p6 <- p5+
  labs(x="Cluster",y="average logFC")+
  geom_text(data=dfcol,
            aes(x=x,y=y, label = label),
            size =5,
            colour = "white")
p6

p7 <- p6+
  theme_minimal()+
  theme(
    axis.title = element_text(size = 13,
                              color = "black",
                              face = "bold"),
    axis.line.y = element_line(color = "black",
                               size = 1.2),
    axis.line.x = element_blank(),
    axis.text.x = element_blank(),
    panel.grid = element_blank(),
    legend.position = "top",
    legend.direction = "vertical",
    legend.justification = c(1,0),
    legend.text = element_text(size = 10)
  )
p7

